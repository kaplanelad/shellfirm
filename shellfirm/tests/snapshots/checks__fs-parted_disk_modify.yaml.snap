---
source: shellfirm/tests/checks.rs
expression: test_file_results
snapshot_kind: text
---
[
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda mklabel gpt",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match creating new GPT partition table",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted    /dev/sda    mklabel gpt",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match creating new GPT partition table with spaces",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sdb mkpart primary",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match creating new partition",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda rm 1",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match removing partition",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda print",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match listing partitions",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda resizepart 1 100%",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match resizing partition",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda toggle 1 boot",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match toggling partition flags",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match interactive mode",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted -l",
        check_detection_ids: [],
        test_description: "should not match listing all devices without modification",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /tmp/test.img",
        check_detection_ids: [],
        test_description: "should not match regular file",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted   /dev/sda   mklabel   gpt",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with extra spaces",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "sudo parted /dev/sda mklabel gpt",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with sudo",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "sudo   parted   /dev/sda   mklabel   gpt",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with sudo and extra spaces",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda mklabel gpt --script",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with script mode",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted --script /dev/sda mklabel gpt",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with script mode in different position",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda mkpart primary ext4 0% 100%",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with full partition parameters",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda mkpart primary 0% 100% ext4",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with parameters in different order",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/mmcblk0 mklabel gpt",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with SD card device",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda1 mklabel gpt",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with partition device",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda move 1 1000 2000",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with move partition",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda name 1 boot",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with name partition",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda set 1 lvm on",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with set partition flag",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sdc mklabel gpt",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with third disk",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/mmcblk0p1 mklabel gpt",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with SD card partition",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda2 mklabel gpt",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with second partition",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted -a optimal /dev/sda mklabel gpt",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with alignment option",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted -s /dev/sda mklabel gpt",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with silent mode",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted --version /dev/sda mklabel gpt",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with version option",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda mklabel gpt mkpart primary ext4 0% 100%",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with multiple operations",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda rm 1 rm 2",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with multiple remove operations",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda mkpart primary ext4 0% 50% mkpart primary ext4 50% 100%",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with multiple create operations",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda mkpart primary ext4 0% 50%",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with percentage parameters",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda mkpart primary ext4 0 1000",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with size parameters",
    },
    TestSensitivePatternsResult {
        file_path: "fs-parted_disk_modify.yaml",
        test: "parted /dev/sda mkpart primary ext4 1000 2000",
        check_detection_ids: [
            "fs:parted_disk_modify",
        ],
        test_description: "match command with start and end parameters",
    },
]
