---
source: shellfirm/tests/checks.rs
expression: test_file_results
snapshot_kind: text
---
[
    TestSensitivePatternsResult {
        file_path: "fs-blockdev_disk_modify.yaml",
        test: "blockdev --setro /dev/sda",
        check_detection_ids: [
            "fs:blockdev_disk_modify",
        ],
        test_description: "match setting read-only mode",
    },
    TestSensitivePatternsResult {
        file_path: "fs-blockdev_disk_modify.yaml",
        test: "blockdev   --setro   /dev/sda",
        check_detection_ids: [
            "fs:blockdev_disk_modify",
        ],
        test_description: "match setting read-only mode with spaces",
    },
    TestSensitivePatternsResult {
        file_path: "fs-blockdev_disk_modify.yaml",
        test: "blockdev --setrw /dev/sda",
        check_detection_ids: [
            "fs:blockdev_disk_modify",
        ],
        test_description: "match setting read-write mode",
    },
    TestSensitivePatternsResult {
        file_path: "fs-blockdev_disk_modify.yaml",
        test: "blockdev   --setrw  /dev/sda",
        check_detection_ids: [
            "fs:blockdev_disk_modify",
        ],
        test_description: "match setting read-write mode with spaces",
    },
    TestSensitivePatternsResult {
        file_path: "fs-blockdev_disk_modify.yaml",
        test: "blockdev --flushbufs /dev/sda",
        check_detection_ids: [
            "fs:blockdev_disk_modify",
        ],
        test_description: "match flushing buffers",
    },
    TestSensitivePatternsResult {
        file_path: "fs-blockdev_disk_modify.yaml",
        test: "blockdev --rereadpt /dev/sda",
        check_detection_ids: [
            "fs:blockdev_disk_modify",
        ],
        test_description: "match rereading partition table",
    },
    TestSensitivePatternsResult {
        file_path: "fs-blockdev_disk_modify.yaml",
        test: "blockdev  --rereadpt  /dev/sda",
        check_detection_ids: [
            "fs:blockdev_disk_modify",
        ],
        test_description: "match rereading partition table with spaces",
    },
    TestSensitivePatternsResult {
        file_path: "fs-blockdev_disk_modify.yaml",
        test: "blockdev --report /dev/sda",
        check_detection_ids: [
            "fs:blockdev_disk_modify",
        ],
        test_description: "match reporting device information",
    },
    TestSensitivePatternsResult {
        file_path: "fs-blockdev_disk_modify.yaml",
        test: "blockdev --getro /dev/sda",
        check_detection_ids: [
            "fs:blockdev_disk_modify",
        ],
        test_description: "match getting read-only status",
    },
    TestSensitivePatternsResult {
        file_path: "fs-blockdev_disk_modify.yaml",
        test: "blockdev --getss /dev/sda",
        check_detection_ids: [
            "fs:blockdev_disk_modify",
        ],
        test_description: "match getting sector size",
    },
    TestSensitivePatternsResult {
        file_path: "fs-blockdev_disk_modify.yaml",
        test: "blockdev --report",
        check_detection_ids: [],
        test_description: "should not match reporting all devices without modification",
    },
    TestSensitivePatternsResult {
        file_path: "fs-blockdev_disk_modify.yaml",
        test: "blockdev --report /tmp/test.img",
        check_detection_ids: [],
        test_description: "should not match regular file",
    },
]
