---
source: shellfirm/tests/checks.rs
expression: test_file_results
snapshot_kind: text
---
[
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4 /dev/sda1",
        check_detection_ids: [
            "fs:mkfs_format",
        ],
        test_description: "match formatting a partition with ext4",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4      /dev/sda1",
        check_detection_ids: [
            "fs:mkfs_format",
        ],
        test_description: "match formatting a partition with ext4 with spaces",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext3 /dev/sdb2",
        check_detection_ids: [
            "fs:mkfs_format",
        ],
        test_description: "match formatting a partition with ext3",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs -t ext4 /dev/sda",
        check_detection_ids: [
            "fs:mkfs_format",
        ],
        test_description: "match formatting entire disk with type parameter",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.fat /dev/mmcblk0p1",
        check_detection_ids: [
            "fs:mkfs_format",
        ],
        test_description: "match formatting SD card partition with FAT",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.xfs /dev/sdc",
        check_detection_ids: [
            "fs:mkfs_format",
        ],
        test_description: "match formatting disk with XFS",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.btrfs /dev/mmcblk0",
        check_detection_ids: [
            "fs:mkfs_format",
        ],
        test_description: "match formatting entire SD card with btrfs",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs /tmp/test.img",
        check_detection_ids: [],
        test_description: "should not match formatting a regular file",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4 /mnt/external",
        check_detection_ids: [],
        test_description: "should not match formatting a mount point",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4",
        check_detection_ids: [],
        test_description: "should not match without device parameter",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4   /dev/sda1",
        check_detection_ids: [
            "fs:mkfs_format",
        ],
        test_description: "match command with extra spaces",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs   -t   ext4   /dev/sda",
        check_detection_ids: [
            "fs:mkfs_format",
        ],
        test_description: "match command with extra spaces",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "sudo mkfs.ext4 /dev/sda1",
        check_detection_ids: [
            "fs:mkfs_format",
        ],
        test_description: "match command with sudo",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "sudo mkfs -t ext4 /dev/sda",
        check_detection_ids: [
            "fs:mkfs_format",
        ],
        test_description: "match command with sudo",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4 -F /dev/sda1",
        check_detection_ids: [],
        test_description: "match command with force flag",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs -t ext4 -F /dev/sda",
        check_detection_ids: [],
        test_description: "match command with force flag",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4 -L mylabel /dev/sda1",
        check_detection_ids: [],
        test_description: "match command with label",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4 /dev/sda2",
        check_detection_ids: [
            "fs:mkfs_format",
        ],
        test_description: "match command with different partition",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4 /dev/sdb",
        check_detection_ids: [
            "fs:mkfs_format",
        ],
        test_description: "match command with different disk",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4 /dev/mmcblk0p2",
        check_detection_ids: [
            "fs:mkfs_format",
        ],
        test_description: "match command with different SD card partition",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ntfs /dev/sda1",
        check_detection_ids: [
            "fs:mkfs_format",
        ],
        test_description: "match command with NTFS filesystem",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs -t ntfs /dev/sda",
        check_detection_ids: [
            "fs:mkfs_format",
        ],
        test_description: "match command with NTFS filesystem type",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.exfat /dev/sda1",
        check_detection_ids: [],
        test_description: "match command with exFAT filesystem",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4 -c /dev/sda1",
        check_detection_ids: [],
        test_description: "match command with check option",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4 -n /dev/sda1",
        check_detection_ids: [],
        test_description: "match command with dry run option",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4 -q /dev/sda1",
        check_detection_ids: [],
        test_description: "match command with quiet option",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4 -F -L mylabel -c /dev/sda1",
        check_detection_ids: [],
        test_description: "match command with multiple options",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs -t ext4 -F -L mylabel -c /dev/sda",
        check_detection_ids: [],
        test_description: "match command with multiple options",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4 /dev/sda3",
        check_detection_ids: [
            "fs:mkfs_format",
        ],
        test_description: "match command with third partition",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4 /dev/sdc1",
        check_detection_ids: [
            "fs:mkfs_format",
        ],
        test_description: "match command with third disk",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4 /dev/mmcblk0p3",
        check_detection_ids: [
            "fs:mkfs_format",
        ],
        test_description: "match command with third SD card partition",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4 -b 4096 /dev/sda1",
        check_detection_ids: [],
        test_description: "match command with block size",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4 -i 4096 /dev/sda1",
        check_detection_ids: [],
        test_description: "match command with inode size",
    },
    TestSensitivePatternsResult {
        file_path: "fs-mkfs_format.yaml",
        test: "mkfs.ext4 -m 5 /dev/sda1",
        check_detection_ids: [],
        test_description: "match command with reserved blocks percentage",
    },
]
